{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/flashcard-setting/flashcard-setting.component.ts","webpack:///src/app/components/flashcard-setting/flashcard-setting.component.html","webpack:///src/app/components/flashcard/flashcard.component.ts","webpack:///src/app/components/flashcard/flashcard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/services/quiz-setting.service.ts","webpack:///src/app/services/quiz.service.ts","webpack:///src/app/types/operation-type.enum.ts","webpack:///src/app/types/question.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","router","home","flashcards","settings","events","subscribe","r","url","selector","templateUrl","styleUrls","routes","path","component","redirectTo","pathMatch","AppModule","forRoot","enableTracing","declarations","imports","providers","bootstrap","FlashcardSettingComponent","settingSvc","success","failure","errmsg","maxQuestions","TotalQuestions","highestNumber","MaxNumber","console","log","Save","result","error","err","message","onSave","FlashcardComponent","quizSvc","totals","quizRunning","questions","selectedOp","hasWarning","index","opForm","opControl","createSubscription$","unsubscribe","quizComplete","op","get","value","Subtract","Multiply","Divide","Add","CreateQuiz","q","length","setupQuestion","warningMsg","Result","userAnswer","Value","Correct","Incorrect","Response","score","calculateScore","x","TopNumber","y","BottomNumber","operatorIndicator","GetOperator","answer","field","nativeElement","blur","focus","numCorrect","filter","startQuiz","HomeComponent","QuizSettingService","TOTAL_Q_KEY","HIGH_NUM","tVal","localStorage","getItem","hVal","er","create","sub","setItem","toString","next","complete","QuizService","Questions","INTERATION_THREADHOLD","currentIndex","operation","o","generateQuestions","counter","i","top","bottom","generateRandomNumber","old","ValueAlreadyExists","push","rawNumber","Math","random","round","OperationType","QuestionResult","Question","Operation","ICON_INCORRECT","ICON_CORRECT","question","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public home = {'active': false};\n  public flashcards = {'active': false};\n  public settings = {'active': false};\n\n  constructor (router: Router)\n  {\n    router.events.subscribe(e => {\n      if (e instanceof NavigationEnd)\n      {\n        let r = e as NavigationEnd;\n\n        switch (r.url)\n        {\n          case '/home':\n            this.home = {'active': true};\n            break;\n          case '/flashcard':\n            this.flashcards = {'active': true};\n            break;\n          case '/settings':\n            this.settings = {'active': true};\n        }\n      }\n    });\n  }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">Flashcard</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" [ngClass]=\"home\">\n        <a class=\"nav-link\" href=\"/home\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\" [ngClass]=\"flashcards\">\n        <a class=\"nav-link\" href=\"/flashcard\">Flashcard</a>\n      </li>\n      <li class=\"nav-item\" [ngClass]=\"settings\">\n        <a class=\"nav-link\" href=\"/settings\">Settings</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n\n</div>\n<div id=\"footer\">\n    &copy; 2017 Scottie Wilcoxson. All rights reserved.\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule  } from \"@angular/forms\";\n\nimport { NgbModule  } from '@ng-bootstrap/ng-bootstrap';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { FlashcardComponent } from './components/flashcard/flashcard.component';\nimport {FlashcardSettingComponent} from './components/flashcard-setting/flashcard-setting.component';\nimport { HomeComponent } from './components/home/home.component';\n\n// Services\nimport { QuizSettingService  } from \"./services/quiz-setting.service\";\nimport { QuizService } from \"./services/quiz.service\";\n\n// Route Configuration\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'flashcard', component: FlashcardComponent},\n  {path: 'settings', component: FlashcardSettingComponent},\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '**', component: HomeComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FlashcardComponent,\n    FlashcardSettingComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      routes,\n      {enableTracing: false}\n    ),\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    QuizService,\n    QuizSettingService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { QuizSettingService } from \"../../services/quiz-setting.service\";\n\n@Component({\n  selector: 'app-flashcard-setting',\n  templateUrl: './flashcard-setting.component.html',\n  styleUrls: ['./flashcard-setting.component.css']\n})\nexport class FlashcardSettingComponent implements OnInit {\n  public maxQuestions: number;\n  public highestNumber: number;\n\n  public success: boolean = false;\n  public failure: boolean = false;\n\n  public errmsg: string = \"\";\n\n  constructor(private settingSvc: QuizSettingService) { }\n\n  ngOnInit() {\n    this.maxQuestions = this.settingSvc.TotalQuestions;\n    this.highestNumber = this.settingSvc.MaxNumber\n\n    this.success = false;\n    this.failure = false;\n  }\n\n  public onSave(): void\n  {\n    console.log('Save clicked...');\n    \n    // Clear panels\n    this.success = false;\n    this.failure = false;\n\n    this.settingSvc.MaxNumber = this.highestNumber;\n    this.settingSvc.TotalQuestions = this.maxQuestions;\n\n    this.settingSvc.Save().subscribe(result => {\n      // Changes saved.... Alert the user...\n      this.success = true;\n    }, (error) => {\n      let err = <Error>error;\n      this.errmsg = err.message;\n      this.failure = true;\n    })\n  }\n}\n","<div class=\"alert alert-success\" *ngIf=\"success==true\">\n  Settings Updated!\n</div>\n\n<div class=\"alert alert-danger\" *ngIf=\"failure==true\">\n  Error saving: {{errmsg}}\n</div>\n\n<div class=form-group>\n  <label for=\"totalQuestions\">Number of Quiz Questions:</label>\n  <input type=\"number\" class=\"form-control\" [(ngModel)]=\"maxQuestions\" id=\"totalQuestions\" />\n  <label for=\"highestNumber\">Highest Number in Equation:</label>\n  <input type=\"number\" class=\"form-control\" [(ngModel)]=\"highestNumber\" id=\"highestNumber\" />\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"onSave()\">Save</button>\n</div>","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { QuizService } from \"../../services/quiz.service\";\nimport { Question } from \"../../types/question\";\nimport { OperationType, QuestionResult } from \"../../types/operation-type.enum\";\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-flashcard',\n  templateUrl: './flashcard.component.html',\n  styleUrls: ['./flashcard.component.css']\n})\nexport class FlashcardComponent implements OnInit, OnDestroy {\n  @ViewChild(\"answerField\") answer: ElementRef;\n  public totals: number = 0;\n  public quizRunning: boolean = false;\n  public questions: Question[] = [];\n  public operatorIndicator: string;\n  public selectedOp: string = \"Addition\";\n\n  // Messages\n  public hasWarning: boolean = false;\n  public failure:boolean = false;\n  public errmsg: string;\n  public warningMsg: string;\n  \n  // Question index\n  public index: number = 0;\n\n  // Response\n  public userAnswer: number;\n  public quizComplete: boolean;\n  public score: number;\n\n  // Forms\n  public opForm = new FormGroup ({\n    opControl: new FormControl(\"Addition\")\n  });\n  \n  // Equation\n  public x: number;\n  public y: number;\n\n  private createSubscription$: Subscription;\n\n  constructor(private quizSvc: QuizService) { }\n\n  ngOnInit() {\n    \n  }\n\n  ngOnDestroy() \n  {\n    this.createSubscription$.unsubscribe();\n  }\n\n  public startQuiz(): void\n  {\n    // Clear messages\n    this.failure = false;\n    this.hasWarning = false;\n    this.quizComplete = false;\n\n    // Reset index\n    this.index = 0;\n\n    let op: OperationType;\n    switch (this.opForm.get(\"opControl\").value)\n    {\n      case \"Subtraction\":\n        op = OperationType.Subtract;\n        break;\n      case \"Multiplication\":\n        op = OperationType.Multiply;\n        break;\n      case \"Division\":\n        op = OperationType.Divide;\n        break;\n      default:\n        op = OperationType.Add;\n        break;\n    }\n    // Create the quiz\n    this.createSubscription$ = this.quizSvc.CreateQuiz(op).subscribe(q => {\n      this.questions = q;\n      this.totals = this.questions.length;\n      this.index = 0;\n    }, (error) => {\n      let err = <Error>error;\n      this.errmsg = err.message;\n      this.failure = true;\n    }, () => {\n      if (this.questions.length > 0)\n      {\n        this.quizRunning = true;\n        this.setupQuestion();\n      } else \n      {\n        this.warningMsg = \"There are no questions in this quiz. Please check the settings.\";\n        this.hasWarning = true;\n      }\n    });\n  }\n\n  public moveNext(): void \n  {\n    // move on...\n    // see if the current question is correct...\n    this.questions[this.index].Result = this.userAnswer == this.questions[this.index].Value() ? QuestionResult.Correct : QuestionResult.Incorrect;\n    this.questions[this.index].Response = this.userAnswer;\n    \n    this.index++;\n    if (this.index < this.questions.length)\n    {\n      // Setup next question\n      this.setupQuestion();\n    }\n    else \n    {\n      // Done...\n      this.quizRunning = false;\n      this.quizComplete = true;\n      this.score = this.calculateScore();\n    }\n  }\n\n  // Helper method to setup the question\n  private setupQuestion() {\n    this.x = this.questions[this.index].TopNumber;\n    this.y = this.questions[this.index].BottomNumber;\n    this.operatorIndicator = this.questions[this.index].GetOperator();\n    this.userAnswer = 0;\n    \n    if (this.answer) {\n      let field = this.answer.nativeElement as HTMLInputElement;\n      field.blur();\n      field.focus();\n    }\n\n  }\n\n  private calculateScore(): number\n  {\n    let numCorrect = this.questions.filter(q => q.Result === QuestionResult.Correct).length;\n    let result = this.totals > 0 ? ((numCorrect/this.totals)*100) : 0;\n    return result;\n  }\n\n}\n","  <form class=\"form-inline\" [formGroup]=\"opForm\" novalidate>\n  <div class=\"form-group\">\n    <select class=\"form-control\" id=\"op\" formControlName=\"opControl\">\n      <option>Addition</option>\n      <option>Subtraction</option>\n      <option>Multiplication</option>\n      <option>Division</option>\n    </select>\n    <button (click)=\"startQuiz()\" [hidden]=\"quizRunning\" class=\"btn btn-primary\" >Start Quiz</button> \n    <a href=\"settings\" class=\"btn btn-secondary\" role=\"button\" aria-disabled=\"true\" alt=\"Settings\"><i class=\"fa fa-cog\" aria-hidden=\"true\"></i></a>\n    {{totals}} question(s)\n\n  </div>\n</form>\n\n<div class=\"alert alert-danger\" *ngIf=\"failure==true\">\n    Error saving: {{errmsg}}\n</div>\n\n<div class=\"alert alert-warning\" *ngIf=\"hasWarning==true\">\n    {{warningMsg}}\n</div>\n\n<div class=\"card\" *ngIf=\"quizRunning == false\">\n  <div class=\"card-header\">Instructions</div>\n  <div class=\"card-block\">\n    <p>Choose an operation and click the &quot;Start Quiz&quot; button to start.</p>\n    <p>You can click the &quot;Settings&quot; link to adjust the quiz settings below:</p>\n    <ul>\n      <li>Number of quiz questions</li>\n      <li>Highest number in equations</li>\n    </ul>\n    <p>Your settings are saved in your browser so you do not have to set them ever ytime you \n    visit the site.</p>\n  </div>\n</div>\n\n<div class=\"flashcard col-6\" *ngIf=\"quizRunning == true\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      Question {{index+1}} of {{totals}}\n    </div>\n  </div>\n  <div class=\"row endOfProblem\">\n    <div class=\"col-1\">\n      <div class=\"operator\">\n          {{operatorIndicator}}\n      </div>\n    </div>\n    <div class=\"col-3\">\n      <h1>{{x}}</h1>\n      <h1>{{y}}</h1>  \n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-1\">&nbsp;</div>\n    <div class=\"col-3\">\n        <input type=\"number\" [(ngModel)]=\"userAnswer\" class=\"answer\" onfocus=\"this.select()\" (keyup.enter)=\"moveNext()\" #answerField />\n    </div>\n  </div>  \n  <p>&nbsp;</p>\n  <div class=\"row\">\n      <div class=\"col-1\">&nbsp;</div>\n      <div class=\"col-3\">\n          <button class=\"btn btn-primary\" (click)=\"moveNext()\">Next</button>\n      </div>\n    </div>  \n  </div> \n\n  <div class=\"card\" *ngIf=\"quizComplete\">\n    <div class=\"card-header\">Results</div>\n    <div class=\"card-text\">\n      You got {{score}}% correct!\n      <div class=\"row\" *ngFor=\"let q of questions\">\n        <div class=\"col-2 equation\">\n          {{q.Equation()}} = {{q.Response}}\n        </div>\n        <div class=\"col-1\">\n          <i class=\"{{q.ResultIcon}}\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Welcome to Scottie's Flashcard Site</h1>\n<p>\n  This site was built for my own kids to help them with solving simple math equations using flashcards. My hope is that it will also be a help to you.\n</p>\n","import { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\";\n@Injectable()\nexport class QuizSettingService {\n  public TotalQuestions: number;\n  public MaxNumber: number;\n\n  private readonly TOTAL_Q_KEY: string = \"totalQuestions\";\n  private readonly HIGH_NUM: string = \"highestNumber\";\n\n  constructor() {\n    try\n    {\n      let tVal = localStorage.getItem(this.TOTAL_Q_KEY);\n      let hVal = localStorage.getItem(this.HIGH_NUM);\n\n      this.TotalQuestions = tVal != null ? +tVal : 0;\n      this.MaxNumber = hVal != null ? +hVal : 0;\n\n    } catch (er)\n    {\n      this.TotalQuestions = 0;\n      this.MaxNumber = 0;\n    }\n   }\n\n  public Save(): Observable<boolean>\n  {\n    \n    let result = Observable.create((sub) => {\n\n      try \n      {\n        localStorage.setItem(this.TOTAL_Q_KEY, this.TotalQuestions.toString());\n        localStorage.setItem(this.HIGH_NUM, this.MaxNumber.toString());\n      }\n      catch (er)\n      {\n        throw new Error(er);\n      }\n\n      sub.next(true);\n      sub.complete();\n    });\n\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable  } from \"rxjs\";\n\nimport { QuizSettingService } from \"./quiz-setting.service\";\n\nimport { Question } from \"../types/question\";\nimport { OperationType } from \"../types/operation-type.enum\";\n@Injectable()\nexport class QuizService {\n  private Questions: Question[] = [];\n  private readonly INTERATION_THREADHOLD: number = 10;\n  private currentIndex: number = 0;\n\n  constructor(private settingSvc: QuizSettingService) { }\n\n  public MoveNext(): Question\n  {\n    this.currentIndex++;\n\n    if (this.currentIndex < this.Questions.length)\n    {\n      return this.Questions[this.currentIndex];\n    } else {\n      this.currentIndex = 0; //Reset index...\n      return null;\n    }\n  }\n\n  public MoveBack(): Question\n  {\n    this.currentIndex--;\n\n    if (this.currentIndex >= 0)\n    {\n      return this.Questions[this.currentIndex];\n    }\n    else {\n      this.currentIndex = 0; //Reset index...\n      return null;\n    }\n  }\n\n  public GetCurrentQuestion()\n  {\n    return this.Questions[this.currentIndex];\n  }\n\n  public MoveFirst()\n  {\n    this.currentIndex = 0;\n  }\n  public CreateQuiz(operation: OperationType): Observable<Question[]>\n  {\n    let o = Observable.create((x) => {\n      this.generateQuestions(operation);\n      x.next(this.Questions);\n      x.complete();\n    });\n    \n    return o;\n  }\n\n  private generateQuestions(operation: OperationType): void\n  {\n    var q: Question;\n    var counter: number;\n      for (let i=0; i<this.settingSvc.TotalQuestions; i++)\n      {\n        counter = 0;\n        do {\n          // Generate question\n          let top: number;\n          let bottom: number;\n          top = this.generateRandomNumber();\n          bottom = this.generateRandomNumber();\n\n          if ((operation == OperationType.Subtract || operation == OperationType.Divide) \n            && (top < bottom))\n          {\n            // Swap numbers\n            let old = bottom;\n            bottom = top;\n            top = old;\n          }\n\n          q = new Question(top, bottom, operation);\n\n          // Built in infinite loop protection. This is a safety valve \n          if (counter > this.INTERATION_THREADHOLD)\n          {\n            throw new Error(\"Cannot generate number. Too many interations. Please check settings.\");\n          }\n          // Count how many random questions have been generated for this iteration\n          counter++;\n\n          // Check to see if this question exists, if so get another one\n        } while(this.ValueAlreadyExists(q.Value()) == true);\n\n        // Add quesiton to the array...\n        this.Questions.push(q);\n      }\n  }\n\n  private generateRandomNumber(): number\n  {\n    let rawNumber = Math.random() * this.settingSvc.MaxNumber;\n    return Math.round(rawNumber);\n  }\n\n  private ValueAlreadyExists(value: number)\n  {\n    for (let q of this.Questions)\n    {\n      if (q.Value() == value)\n      {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n  }\n}\n","export enum OperationType {\n    Add = 1,\n    Subtract = 2,\n    Multiply = 3,\n    Divide = 4\n}\nexport enum QuestionResult {\n    Incorrect = 0,\n    Correct = 1,\n    Skipped = 2\n}","import { OperationType, QuestionResult } from './operation-type.enum';\nexport class Question {\n    public Result: QuestionResult\n    public Response: number;\n\n    private readonly ICON_INCORRECT: string = \"fa fa-times incorrect\";\n    private readonly ICON_CORRECT: string = \"fa fa-check correct\";\n\n    // readonly property...\n    get ResultIcon(): string \n    {\n        return this.Result === QuestionResult.Correct ? this.ICON_CORRECT : this.ICON_INCORRECT;\n    }\n\n    constructor(public TopNumber: number, \n        public BottomNumber: number,\n        public Operation: OperationType)\n    {\n        this.Result = null;\n    }\n\n    public Equals (question: Question): boolean\n    {\n        return (this.Value() == question.Value());\n    }\n\n    public Equation(): string\n    {\n        let op = this.GetOperator();\n        return `${this.TopNumber} ${op} ${this.BottomNumber}`;\n    }\n\n    public GetOperator(): string \n    {\n      switch (this.Operation)\n      {\n        case OperationType.Add:\n          return \"+\";\n        case OperationType.Subtract:\n          return \"-\";\n        case OperationType.Multiply:\n          return \"x\";\n        case OperationType.Divide:\n          return \"/\";\n      }\n    }\n\n    public Value(): number\n    {\n        var answer: number = 0;\n        switch (this.Operation)\n        {\n            case OperationType.Add:\n                answer = this.TopNumber + this.BottomNumber;\n                break;\n            case OperationType.Subtract:\n                answer = this.TopNumber - this.BottomNumber;\n                break;\n            case OperationType.Multiply:\n                answer = this.TopNumber * this.BottomNumber;\n                break;\n            case OperationType.Divide:\n                answer = this.TopNumber/this.BottomNumber;\n                break;\n        }\n\n        return answer;\n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}